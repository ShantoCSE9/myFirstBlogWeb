html:


<div class="grid-container">
  <div class="grid-item">Content 1gggggggggggggggggggggggggggggggggggggggggggg</div>
  <div class="grid-item">Content 2</div>
  <div class="grid-item">Content 3</div>
   <div class="grid-item">Content 1</div>
  <div class="grid-item">Content 2</div>
  <div class="grid-item">Content 3</div>
   <div class="grid-item">Content 1</div>
  <div class="grid-item">Content 2</div>
  <div class="grid-item">Content 3</div>
  <div class="grid-item">Content 3</div>
  <div class="grid-item">Content 3</div>
  <div class="grid-item">Content 3</div>
  <div class="grid-item">Content 3</div>
  <div class="grid-item">Content 3</div>
  
</div>


css:

.grid-container {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr ;
  grid-auto-rows: minmax(0, auto); /* Allow rows to expand based on content */
  gap: 10px;
}

.grid-item {
  background-color: lightgray;
  padding: 10px;
}



js:


window.addEventListener('DOMContentLoaded', () => {
  const gridItems = document.querySelectorAll('.grid-item');

  // Function to adjust row heights based on content
  const adjustRowHeights = () => {
    gridItems.forEach((item) => {
      item.style.gridRowEnd = `span ${Math.ceil(item.clientHeight / 20)}`;
    });
  };

  // Call the function initially and whenever the window is resized
  adjustRowHeights();
  window.addEventListener('resize', adjustRowHeights);
});
